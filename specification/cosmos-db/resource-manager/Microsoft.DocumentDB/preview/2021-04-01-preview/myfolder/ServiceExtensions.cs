// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Services
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Service.
    /// </summary>
    public static partial class ServiceExtensions
    {
            /// <summary>
            /// Creates a service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='serviceName'>
            /// Cosmos DB service name.
            /// </param>
            /// <param name='servicesCreateUpdateParameter'>
            /// The Service configuration parameters.
            /// </param>
            public static ServiceResource Create(this IService operations, string resourceGroupName, string accountName, string serviceName, ServicesCreateUpdateParameters servicesCreateUpdateParameter)
            {
                return operations.CreateAsync(resourceGroupName, accountName, serviceName, servicesCreateUpdateParameter).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates a service.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='serviceName'>
            /// Cosmos DB service name.
            /// </param>
            /// <param name='servicesCreateUpdateParameter'>
            /// The Service configuration parameters.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ServiceResource> CreateAsync(this IService operations, string resourceGroupName, string accountName, string serviceName, ServicesCreateUpdateParameters servicesCreateUpdateParameter, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, accountName, serviceName, servicesCreateUpdateParameter, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
