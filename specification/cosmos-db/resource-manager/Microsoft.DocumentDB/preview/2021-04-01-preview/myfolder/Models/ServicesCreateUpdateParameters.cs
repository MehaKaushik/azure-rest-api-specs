// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Services.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Service create or update parameters.
    /// </summary>
    [JsonTransformation]
    public partial class ServicesCreateUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the ServicesCreateUpdateParameters
        /// class.
        /// </summary>
        public ServicesCreateUpdateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServicesCreateUpdateParameters
        /// class.
        /// </summary>
        /// <param name="instanceSize">Possible values include: 'Cosmos.D4s',
        /// 'Cosmos.D8s', 'Cosmos.D16s'</param>
        /// <param name="instanceCount">Instance count for the service.</param>
        /// <param name="serviceType">The type of Azure resource.</param>
        public ServicesCreateUpdateParameters(string instanceSize, int instanceCount, string serviceType = default(string))
        {
            InstanceSize = instanceSize;
            InstanceCount = instanceCount;
            ServiceType = serviceType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'Cosmos.D4s', 'Cosmos.D8s',
        /// 'Cosmos.D16s'
        /// </summary>
        [JsonProperty(PropertyName = "properties.instanceSize")]
        public string InstanceSize { get; set; }

        /// <summary>
        /// Gets or sets instance count for the service.
        /// </summary>
        [JsonProperty(PropertyName = "properties.instanceCount")]
        public int InstanceCount { get; set; }

        /// <summary>
        /// Gets or sets the type of Azure resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.serviceType")]
        public string ServiceType { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (InstanceSize == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "InstanceSize");
            }
        }
    }
}
